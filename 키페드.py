    #문제해설:
    #numbers 배열에서 1,4,7 과 3,6,9 원소가 나올 때는 각각 'L'과 'R'로 결과가 확정되므로 이들을 제외한 2,5,8,0이 나올 때 'L'과 'R'을 어떻게 구할 것인가가 목표.
    #2,5,8,0 원소와 마지막 오른손 위치 간 키패드 상의 거리
    #그리고 2,5,8,0 원소와 마지막 왼손 위치 간 키패드 상의 거리를
    #비교하여 가까운 거리를 구하면 해결할 수 있다. 같은 경우 hand 값을 이용하면 된다.
    #먼저, 키패드의 * 을 10, 0을 11, #을 12라고 하면 각 키패드에서 상하좌우로 한 칸 씩 이동할 때 다음과 같은 값의 변화를 갖게 된다.

def solution(numbers, hand):
    answer = ''
    
    # 키패드 좌표료 변경
    #[x열:x번재(0부터 카운트)]
    dic = {1: [0, 0], 2: [0, 1], 3: [0, 2],
           4: [1, 0], 5: [1, 1], 6: [1, 2],
           7: [2, 0], 8: [2, 1], 9: [2, 2],
           '*':[3, 0], 0: [3, 1], '#': [3, 2]}
    
    # 별은 왼쪽, 샵은 오른쪽
    left_s = dic['*']
    right_s = dic['#']
    
    for i in numbers:
        now = dic[i]
        # 1, 4, 7을 누르는 경우 무조건 왼손
        if i in [1, 4, 7]:
            answer += 'L'
            left_s = now
            
        # 3, 6, 9를 누르는 경우 무조건 오른손
        elif i in [3, 6, 9]:
            answer += 'R'
            right_s = now
            

        #예를 들어 5에서 위로 한칸 이동하면 -3의 변화를 거쳐 2가 된다.
        #또, 8에서 아래로 한칸 이동하면 +3을 변화를 거쳐 키패드 0에 대응하는 11이 되는 것이다.


        # 2, 5, 8, 0을 누르는 경우
        else:
            left_d = 0
            right_d = 0
            #마지막 손의 위치와 2,5,8,0 원소간 절댓값을 구하고
            # 좌표 거리 계산해주기
            for a, b, c in zip(left_s, right_s, now):
                left_d += abs(a-c) #abs = 절대값
                right_d += abs(b-c)
            #이를 3으로 나눈 몫과 나머지를 더하면 키패드 상의 거리를 구할 수 있다.

            # 왼손이 더 가까운 경우
            if left_d < right_d:
                answer += 'L'
                left_s = now
                
            # 오른손이 더 가까운 경우
            elif left_d > right_d:
                answer += 'R'
                right_s = now

            #이들을 비교하여 거리가 가까운 손을 구해 'L'과 'R'을 정하고 같을 경우에는 hand 값을 활용하면 문제를 해결할 수 있다.
            # 두 거리가 같은 경우
            else:
                # 왼손잡이 경우
                if hand == 'left':
                    answer += 'L'
                    left_s = now
                    
                # 오른손잡이 경우
                else:
                    answer += 'R'
                    right_s = now
            
    return answer
